@model Site.Models.Email

@{
    ViewBag.Title = "Enviar Contato";
}



<h2>Solicitar Informações sobre o Átom</h2>

@using (Html.BeginForm(null, null, FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div id="activity_pane" class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.From, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.To, new { htmlAttributes = new { @class = "form-control", } })
                @Html.EditorFor(model => model.From, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.From, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Telefone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Telefone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Seu Nome", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Body, new { htmlAttributes = new { @class = "form-control" } })<br>
                @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10 ">
                <button type="button" id="btnEmail" class="btn btn-warning">Enviar</button>
            </div>
        </div>
    </div>


    <div id="alertAction" class="col-lg-12 col-md-6 col-xs-12 collapse alert-success" style="border-radius:5px; margin:auto;">
        <div class="col-md-1 text-success">
            <span id="spanIcon" class="glyphicon glyphicon-thumbs-up btn-lg"></span>
        </div>
        <div id="divMsg" class="col-md-10 col-lg-10 col-sm-12 col-xs-12" style="margin-top:10px;"> Mensagem enviada com Sucesso!!</div>
    </div>
}

<script type="text/javascript">
    $(document).ready(function () {

        $('#Body').attr('rows', '5');
        $('#Body').attr('cols', '40');
        $('#To').val('agles@usa.com');
    });


    $('#btnEmail').click(() => {

            if (!$("form").valid())
            return;
  
           jQuery('#activity_pane').showLoading();
            $('#btnEmail').html('Aguarde...');
            var tbody = $('#Body').val() ;
            var assunto = $('#Subject').val();
            $.ajax({
                url: '@Url.Action("EnviarContato")',
                type: "POST",
                dataType: "json",
                cache: false,
                data: { From: $('#From').val(), Telefone: $('#Telefone').val(), Nome: $('#Nome').val(), To: $('#To').val(), Subject: assunto, Body: tbody},
                success: function (data) {
                    
                    if (data.isSubmited) {
                    
                        jQuery('#activity_pane').hideLoading();
                        $("#alertAction").collapse('show');
                        setTimeout(() => { $("#alertAction").collapse('hide'); }, 3000)
                        $('form').trigger("reset");
                        $('#Body').val('');
                        $('#Subject').val('');
                        $('#btnEmail').html('Enviar');
                    }
                    else {
                        jQuery('#activity_pane').hideLoading();
                        $('#btnEmail').html('Enviar');
                        $('#alertAction').removeClass('alert-success').addClass('alert-danger'); 
                        $('#spanIcon').removeClass('glyphicon glyphicon-thumbs-up').addClass('glyphicon glyphicon-remove-circle'); 
                        $('#divMsg').html(data.messageError + '')
                        $("#alertAction").collapse('show');
                        setTimeout(() => {
                            $("#alertAction").collapse('hide');
                        }, 3000)
                    }
                },
                error: function (data) {
                    jQuery('#activity_pane').hideLoading();
                    
                    setTimeout(() => {
                        $('#divMsg').html('Erro ao tentar Enviar mensagem!')
                        $("#alertAction").collapse('hide');
                    }, 3000)
                    $('form').trigger("reset");
                }
            })
        //}
    });
</script>

